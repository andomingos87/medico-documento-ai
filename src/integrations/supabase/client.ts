// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const projectRef: string | undefined = import.meta.env.VITE_SUPABASE_PROJECT_ID;
const providedUrl: string | undefined = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_URL = providedUrl || (projectRef ? `https://${projectRef}.supabase.co` : undefined);
const SUPABASE_PUBLISHABLE_KEY: string | undefined = import.meta.env.VITE_SUPABASE_PUBLISHABLE_KEY;

if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  // Fail fast with a clear error instead of using hardcoded fallbacks
  const missing = [
    !SUPABASE_URL ? 'VITE_SUPABASE_URL ou VITE_SUPABASE_PROJECT_ID' : undefined,
    !SUPABASE_PUBLISHABLE_KEY ? 'VITE_SUPABASE_PUBLISHABLE_KEY' : undefined,
  ].filter(Boolean).join(', ');
  // eslint-disable-next-line no-console
  console.error('[Supabase] Variáveis ausentes:', missing);
  throw new Error(`[Supabase] Configure as variáveis de ambiente: ${missing}`);
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Pequena verificação para ajudar a diagnosticar DNS incorreto (ex.: domínio do projeto inválido)
try {
  const url = new URL(SUPABASE_URL);
  if (!url.hostname.endsWith('.supabase.co')) {
    // eslint-disable-next-line no-console
    console.warn('[Supabase] A URL não parece ser do domínio supabase.co:', SUPABASE_URL);
  }
} catch (_) {
  // eslint-disable-next-line no-console
  console.warn('[Supabase] URL inválida fornecida:', SUPABASE_URL);
}

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});